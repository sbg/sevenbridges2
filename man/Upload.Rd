% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-upload.R
\name{Upload}
\alias{Upload}
\title{R6 Class representing an upload job}
\description{
R6 Class representing a resource for managing files' uploads.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{upload_id}}{Upload ID received after upload initialization.}

\item{\code{path}}{Relative or absolute path to the file on the local disc.}

\item{\code{project}}{Project's identifier (character).}

\item{\code{parent}}{The ID of the folder to which the item is being uploaded.
Should not be used together with 'project'.}

\item{\code{file_name}}{New file name. Optional.}

\item{\code{overwrite}}{If true will overwrite file on the server.}

\item{\code{file_size}}{File size.}

\item{\code{part_size}}{Size of part in bytes.}

\item{\code{part_length}}{Number of parts to upload.}

\item{\code{parts}}{List of parts to be uploaded (class Part).}

\item{\code{initialized}}{If TRUE, upload has been initialized.}

\item{\code{auth}}{Authentication object.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Upload-new}{\code{Upload$new()}}
\item \href{#method-Upload-print}{\code{Upload$print()}}
\item \href{#method-Upload-upload_init}{\code{Upload$upload_init()}}
\item \href{#method-Upload-upload_info}{\code{Upload$upload_info()}}
\item \href{#method-Upload-clone}{\code{Upload$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Upload-new"></a>}}
\if{latex}{\out{\hypertarget{method-Upload-new}{}}}
\subsection{Method \code{new()}}{
Create a new Upload object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Upload$new(
  path = NA,
  project = NA,
  parent = NA,
  file_name = NA,
  overwrite = NA,
  file_size = NA,
  part_size = NA,
  initialized = FALSE,
  auth = NA,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{Path to the file on the local disc.}

\item{\code{project}}{Project's identifier (character).}

\item{\code{parent}}{The ID of the folder to which the item is being uploaded.}

\item{\code{file_name}}{New file name. Optional.}

\item{\code{overwrite}}{If true will overwrite file on the server.}

\item{\code{file_size}}{File size.}

\item{\code{part_size}}{Size of a single part in bytes.}

\item{\code{initialized}}{If TRUE, upload has been initialized.}

\item{\code{auth}}{Authentication object.}

\item{\code{...}}{Other arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Upload-print"></a>}}
\if{latex}{\out{\hypertarget{method-Upload-print}{}}}
\subsection{Method \code{print()}}{
Print method for Upload class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Upload$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Upload-upload_init"></a>}}
\if{latex}{\out{\hypertarget{method-Upload-upload_init}{}}}
\subsection{Method \code{upload_init()}}{
Initialize new upload job.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Upload$upload_init(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Other arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Upload-upload_info"></a>}}
\if{latex}{\out{\hypertarget{method-Upload-upload_info}{}}}
\subsection{Method \code{upload_info()}}{
Get the details of an active multipart upload.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Upload$upload_info(list_parts = TRUE, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{list_parts}}{If TRUE, also return a list of parts
that have been reported as completed for this multipart upload.}

\item{\code{...}}{Other arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Upload-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Upload-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Upload$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
