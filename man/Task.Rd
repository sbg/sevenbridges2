% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-task.R
\name{Task}
\alias{Task}
\title{R6 Class representing a Task}
\description{
R6 Class representing a resource for managing tasks.
}
\section{Super class}{
\code{\link[sevenbridges2:Item]{sevenbridges2::Item}} -> \code{Task}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{URL}}{URL endpoint fields}

\item{\code{id}}{String. The ID of the task.}

\item{\code{name}}{String. The name of the task.}

\item{\code{status}}{String. Task status (different from execution_status).
Allowed values:
\itemize{
\item QUEUED
\item DRAFT
\item RUNNING
\item COMPLETED
\item ABORTED
\item FAILED
}}

\item{\code{description}}{String. An optional description of a task.}

\item{\code{project}}{String. Identifier of the project that
the task is located in.}

\item{\code{app}}{String. The identifier of the app that was used for the task.}

\item{\code{created_by}}{String. Username of the task creator.}

\item{\code{executed_by}}{String. Username of the task executor.}

\item{\code{created_on}}{String. The time when the task was created.}

\item{\code{start_time}}{String. Task start time.}

\item{\code{end_time}}{String. Task end time.}

\item{\code{origin}}{String. Id of the entity that created the task, e.g.
automation run, if task was created by an automation run.}

\item{\code{use_interruptable_instances}}{Boolean. This field can be TRUE or
FALSE. Set this field to TRUE to allow the use of spot instances.}

\item{\code{batch}}{Boolean. TRUE for batch tasks, FALSE for regular & child
tasks (batch this task; if FALSE, will not create a batch task).}

\item{\code{batch_by}}{List. Batching criteria.}

\item{\code{batch_group}}{List. Batch group for a batch task. Represents the
group that is assigned to the child task from the batching criteria that
was used when the task was started.}

\item{\code{batch_input}}{String. Input identifier on to which to apply
batching.}

\item{\code{batch_parent}}{String. Parent task for a batch child. (batch task
which is the parent of this task).}

\item{\code{execution_settings}}{List. Execution settings for the task.}

\item{\code{execution_status}}{List. Task execution status. (info about current
execution status)}

\item{\code{errors}}{List. Validations errors stored as a high-level errors
array property in the API response.}

\item{\code{warnings}}{List. Validation warnings from API response.}

\item{\code{price}}{List. Task cost. (contains amount and currency)}

\item{\code{inputs}}{List.Inputs that were submitted to the task.}

\item{\code{outputs}}{List. Generated outputs from the task.}

\item{\code{output_location}}{List. Location where task outputs will be stored.}

\item{\code{href}}{Link to the current task resource.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Task-new}{\code{Task$new()}}
\item \href{#method-Task-print}{\code{Task$print()}}
\item \href{#method-Task-run}{\code{Task$run()}}
\item \href{#method-Task-abort}{\code{Task$abort()}}
\item \href{#method-Task-clone}{\code{Task$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Task-new"></a>}}
\if{latex}{\out{\hypertarget{method-Task-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$new(
  id = NA,
  name = NA,
  status = NA,
  description = NA,
  project = NA,
  app = NA,
  created_by = NA,
  executed_by = NA,
  created_on = NA,
  start_time = NA,
  end_time = NA,
  origin = NA,
  use_interruptable_instances = NA,
  batch = NA,
  batch_by = NA,
  batch_group = NA,
  batch_input = NA,
  batch_parent = NA,
  execution_settings = NA,
  execution_status = NA,
  errors = NA,
  warnings = NA,
  price = NA,
  inputs = NA,
  outputs = NA,
  output_location = NA,
  href = NA,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Other arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Task-print"></a>}}
\if{latex}{\out{\hypertarget{method-Task-print}{}}}
\subsection{Method \code{print()}}{
Print method for Task class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Task-run"></a>}}
\if{latex}{\out{\hypertarget{method-Task-run}{}}}
\subsection{Method \code{run()}}{
This call runs (executes) the task. Only tasks whose status
is "DRAFT" can be run.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$run(batch = NULL, use_interruptible_instances = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{batch}}{Boolean. Set this to FALSE to disable the default batching
for this task. Running a batch task is a recommended way to run multiple
tasks considering the API rate limit
(\href{https://docs.sevenbridges.com/docs/api-rate-limit}{learn more}).}

\item{\code{use_interruptible_instances}}{Boolean. This field can be TRUE or
FALSE. Set this field to TRUE to allow the use of
\href{https://docs.sevenbridges.com/docs/about-spot-instances}{spot instances}}

\item{\code{...}}{Other parameters that can be passed to api() function like
fields etc.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Task-abort"></a>}}
\if{latex}{\out{\hypertarget{method-Task-abort}{}}}
\subsection{Method \code{abort()}}{
This call aborts the specified task. Only tasks whose
status is "RUNNING" or "QUEUED" may be aborted.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$abort(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Other parameters that can be passed to api() function like
fields etc.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Task-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Task-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
