% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-project.R
\name{Project}
\alias{Project}
\title{R6 Class representing a project.}
\description{
R6 Class representing a central resource for managing projects.
}
\details{
This is main object for Projects
}
\section{Super class}{
\code{\link[sevenbridges2:Item]{sevenbridges2::Item}} -> \code{Project}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{Project's ID.}

\item{\code{name}}{Project's name.}

\item{\code{billing_group}}{The ID of the billing group for the project.}

\item{\code{description}}{Project's description.}

\item{\code{type}}{Project's type. All projects have type v2.}

\item{\code{tags}}{The list of project tags.}

\item{\code{settings}}{A list which contains detailed project settings.
The following fields are part of the settings object:
\itemize{
  \item locked (boolean) Set this field to true to lock down a project.
   Locking down a project prevents any Seven Bridges team member from
   viewing any information about the task.
  \item use_interruptible_instances (boolean) Defines the use of spot
   instances. If not included in the request, spot instances are enabled
   by default.
  \item use_memoization (boolean) Set to false by default. Set to true
   to enable memoization.
  \item elastic_disk (boolean) Set to true to enable Elastic disk.
  \item intermediate_files (list) Contains the following two sub fields:
  retention - Specifies that intermediate files should be retained for a
  limited amount of time. The value is always LIMITED.
  duration - Specifies intermediate files retention period in hours.
  The minimum value is 1. The maximum value is 120 and the default value
  is 24.
}}

\item{\code{root_folder}}{ID for of the project's root folder.}

\item{\code{created_by}}{Username of the person who created the project.}

\item{\code{created_on}}{Date and time of project creation.}

\item{\code{modified_on}}{Date and time describing when the project was
last modified.}

\item{\code{permissions}}{An object containing the information about user's
permissions within the project.}

\item{\code{category}}{Project's category. By default projects are PRIVATE.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Project-new}{\code{Project$new()}}
\item \href{#method-Project-print}{\code{Project$print()}}
\item \href{#method-Project-edit}{\code{Project$edit()}}
\item \href{#method-Project-delete}{\code{Project$delete()}}
\item \href{#method-Project-member_list}{\code{Project$member_list()}}
\item \href{#method-Project-member_add}{\code{Project$member_add()}}
\item \href{#method-Project-member_delete}{\code{Project$member_delete()}}
\item \href{#method-Project-member_permissions_get}{\code{Project$member_permissions_get()}}
\item \href{#method-Project-member_permissions_modify}{\code{Project$member_permissions_modify()}}
\item \href{#method-Project-clone}{\code{Project$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-new"></a>}}
\if{latex}{\out{\hypertarget{method-Project-new}{}}}
\subsection{Method \code{new()}}{
Create a new Project object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$new(
  id = NA,
  name = NA,
  billing_group = NA,
  description = NA,
  type = "v2",
  tags = NA,
  settings = NA,
  root_folder = NA,
  created_by = NA,
  created_on = NA,
  modified_on = NA,
  permissions = NA,
  category = NA,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Project's ID.}

\item{\code{name}}{Project's name.}

\item{\code{billing_group}}{The ID of the billing group for the project.}

\item{\code{description}}{Project's description.}

\item{\code{type}}{Project's type. All projects have type v2.}

\item{\code{tags}}{The list of project tags. By default, projects do not have
any tags.}

\item{\code{settings}}{A list which contains detailed project settings.}

\item{\code{root_folder}}{ID for of the project's root folder.}

\item{\code{created_by}}{Username of the person who created the project.}

\item{\code{created_on}}{Date and time of project creation.}

\item{\code{modified_on}}{Date and time describing when the project was
last modified.}

\item{\code{permissions}}{An object containing the information about user's
permissions within the project.}

\item{\code{category}}{Project's category. By default projects are PRIVATE.}

\item{\code{...}}{Other arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-print"></a>}}
\if{latex}{\out{\hypertarget{method-Project-print}{}}}
\subsection{Method \code{print()}}{
Print method for Project class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-edit"></a>}}
\if{latex}{\out{\hypertarget{method-Project-edit}{}}}
\subsection{Method \code{edit()}}{
Method that allows you to edit an already existing project.
As a project Admin you can use it to change the name, settings,
tags or billing group of the project. Users with write permissions in
the project can change the project description.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$edit(
  name = NULL,
  description = NULL,
  billing_group = NULL,
  settings = NULL,
  tags = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The name of the project you are creating.}

\item{\code{description}}{Description of the project.}

\item{\code{billing_group}}{The ID of the billing group for the project.}

\item{\code{settings}}{Contains detailed project settings.}

\item{\code{tags}}{The list of project tags.}

\item{\code{...}}{Additional parameters that can be passed to the method.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-delete"></a>}}
\if{latex}{\out{\hypertarget{method-Project-delete}{}}}
\subsection{Method \code{delete()}}{
Method that allows you to delete project from a platform.
It can only be successfully made if you have admin status for the
project.
Please be careful when using this method and note that calling it will
permanently delete the project from the platform.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$delete()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-member_list"></a>}}
\if{latex}{\out{\hypertarget{method-Project-member_list}{}}}
\subsection{Method \code{member_list()}}{
Method for listing all the project members.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$member_list(pid = self$id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pid}}{ID of a project for which you want to get a list of members.}

\item{\code{...}}{Other arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-member_add"></a>}}
\if{latex}{\out{\hypertarget{method-Project-member_add}{}}}
\subsection{Method \code{member_add()}}{
Method for adding new members to a specified project.
The call can only be successfully made by a user who has admin
permissions in the project.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$member_add(
  pid = self$id,
  username = NULL,
  email = NULL,
  write = TRUE,
  read = TRUE,
  copy = TRUE,
  execute = TRUE,
  admin = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pid}}{ID of a project (project id = project_owner + project).}

\item{\code{username}}{The Seven Bridges Platform username of the person
you want to add to the project.}

\item{\code{email}}{The email address of the person you want to add to the
project. This has to be the email address that the person used when
registering for an account on the Seven Bridges Platform.}

\item{\code{write}}{Whether the user should have the write permission.}

\item{\code{read}}{Whether the user should have the read permission.}

\item{\code{copy}}{Whether the user should have the copy permission.}

\item{\code{execute}}{Whether the user should have the execute permission.}

\item{\code{admin}}{Whether the user should have the admin permission.}

\item{\code{...}}{Other arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-member_delete"></a>}}
\if{latex}{\out{\hypertarget{method-Project-member_delete}{}}}
\subsection{Method \code{member_delete()}}{
A method for deleting members from the project. It can only
be successfully run by a user who has admin privileges in the project.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$member_delete(pid = self$id, username = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pid}}{ID of a project (project id = project_owner + project).}

\item{\code{username}}{The Seven Bridges Platform username of the user you
are about to remove.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-member_permissions_get"></a>}}
\if{latex}{\out{\hypertarget{method-Project-member_permissions_get}{}}}
\subsection{Method \code{member_permissions_get()}}{
This method returns the permissions of a specified user
within a specified project.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$member_permissions_get(pid = self$id, username = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pid}}{ID of a project (project id = project_owner + project).}

\item{\code{username}}{Username of the user whose permissions you are
enquiring about.}

\item{\code{...}}{Other arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-member_permissions_modify"></a>}}
\if{latex}{\out{\hypertarget{method-Project-member_permissions_modify}{}}}
\subsection{Method \code{member_permissions_modify()}}{
This method can be used to edit a user's permissions in a
specified  project.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$member_permissions_modify(
  pid = self$id,
  username = NULL,
  write = TRUE,
  read = TRUE,
  copy = TRUE,
  execute = TRUE,
  admin = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pid}}{ID of a project (project id = project_owner + project).}

\item{\code{username}}{The project member whose permissions you are editing.}

\item{\code{write}}{Whether the user should have the write permission.}

\item{\code{read}}{Whether the user should have the read permission.}

\item{\code{copy}}{Whether the user should have the copy permission.}

\item{\code{execute}}{Whether the user should have the execute permission.}

\item{\code{admin}}{Whether the user should have the admin permission.}

\item{\code{...}}{Other arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Project-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
