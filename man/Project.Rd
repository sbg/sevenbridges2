% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-project.R
\name{Project}
\alias{Project}
\title{R6 Class representing a project.}
\description{
R6 Class representing a central resource for managing projects.
}
\details{
This is main object for Projects
}
\section{Super class}{
\code{\link[sevenbridges2:Item]{sevenbridges2::Item}} -> \code{Project}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{Project's ID.}

\item{\code{name}}{Project's name.}

\item{\code{billing_group}}{The ID of the billing group for the project.}

\item{\code{description}}{Project's description.}

\item{\code{type}}{Project's type. All projects have type v2.}

\item{\code{tags}}{The list of project tags.}

\item{\code{settings}}{A list which contains detailed project settings.
The following fields are part of the settings object:
\itemize{
\item locked (boolean) Set this field to true to lock down a project.
Locking down a project prevents any Seven Bridges team member from
viewing any information about the task.
\item use_interruptible_instances (boolean) Defines the use of spot
instances. If not included in the request, spot instances are enabled
by default.
\item use_memoization (boolean) Set to false by default. Set to true
to enable memoization.
\item use_elastic_disk (boolean) Set to true to enable Elastic disk.
\item intermediate_files (list) Contains the following two sub fields:
retention - Specifies that intermediate files should be retained for a
limited amount of time. The value is always LIMITED.
duration - Specifies intermediate files retention period in hours.
The minimum value is 1. The maximum value is 120 and the default value
is 24.
}}

\item{\code{root_folder}}{ID for of the project's root folder.}

\item{\code{created_by}}{Username of the person who created the project.}

\item{\code{created_on}}{Date and time of project creation.}

\item{\code{modified_on}}{Date and time describing when the project was
last modified.}

\item{\code{permissions}}{An object containing the information about user's
permissions within the project.}

\item{\code{category}}{Project's category. By default projects are PRIVATE.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Project-new}{\code{Project$new()}}
\item \href{#method-Project-print}{\code{Project$print()}}
\item \href{#method-Project-detailed_print}{\code{Project$detailed_print()}}
\item \href{#method-Project-edit}{\code{Project$edit()}}
\item \href{#method-Project-delete}{\code{Project$delete()}}
\item \href{#method-Project-list_members}{\code{Project$list_members()}}
\item \href{#method-Project-add_member}{\code{Project$add_member()}}
\item \href{#method-Project-remove_member}{\code{Project$remove_member()}}
\item \href{#method-Project-get_member}{\code{Project$get_member()}}
\item \href{#method-Project-modify_member_permissions}{\code{Project$modify_member_permissions()}}
\item \href{#method-Project-files}{\code{Project$files()}}
\item \href{#method-Project-create_folder}{\code{Project$create_folder()}}
\item \href{#method-Project-get_root_folder}{\code{Project$get_root_folder()}}
\item \href{#method-Project-list_apps}{\code{Project$list_apps()}}
\item \href{#method-Project-create_app}{\code{Project$create_app()}}
\item \href{#method-Project-clone}{\code{Project$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-new"></a>}}
\if{latex}{\out{\hypertarget{method-Project-new}{}}}
\subsection{Method \code{new()}}{
Create a new Project object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$new(
  id = NA,
  name = NA,
  billing_group = NA,
  description = NA,
  type = "v2",
  tags = NA,
  settings = NA,
  root_folder = NA,
  created_by = NA,
  created_on = NA,
  modified_on = NA,
  permissions = NA,
  category = NA,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Project's ID.}

\item{\code{name}}{Project's name.}

\item{\code{billing_group}}{The ID of the billing group for the project.}

\item{\code{description}}{Project's description.}

\item{\code{type}}{Project's type. All projects have type v2.}

\item{\code{tags}}{The list of project tags. By default, projects do not have
any tags.}

\item{\code{settings}}{A list which contains detailed project settings.}

\item{\code{root_folder}}{ID for of the project's root folder.}

\item{\code{created_by}}{Username of the person who created the project.}

\item{\code{created_on}}{Date and time of project creation.}

\item{\code{modified_on}}{Date and time describing when the project was
last modified.}

\item{\code{permissions}}{An object containing the information about user's
permissions within the project.}

\item{\code{category}}{Project's category. By default projects are PRIVATE.}

\item{\code{...}}{Other arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-print"></a>}}
\if{latex}{\out{\hypertarget{method-Project-print}{}}}
\subsection{Method \code{print()}}{
Basic print method for Project class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-detailed_print"></a>}}
\if{latex}{\out{\hypertarget{method-Project-detailed_print}{}}}
\subsection{Method \code{detailed_print()}}{
Detailed print method for Project class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$detailed_print()}\if{html}{\out{</div>}}
}

\subsection{Details}{
This method allows users to print all the fields from the
Project object more descriptively.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-edit"></a>}}
\if{latex}{\out{\hypertarget{method-Project-edit}{}}}
\subsection{Method \code{edit()}}{
Method that allows you to edit an already existing project.
As a project Admin you can use it to change the name, settings,
tags or billing group of the project. Users with write permissions in
the project can change the project description.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$edit(
  name = NULL,
  description = NULL,
  billing_group = NULL,
  settings = NULL,
  tags = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The name of the project you are creating.}

\item{\code{description}}{Description of the project.}

\item{\code{billing_group}}{Billing object or ID of a particular billing
group for the project.}

\item{\code{settings}}{Contains detailed project settings.}

\item{\code{tags}}{The list of project tags.}

\item{\code{...}}{Other arguments that can be passed to api() function
like 'limit', 'offset', 'fields', etc.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-delete"></a>}}
\if{latex}{\out{\hypertarget{method-Project-delete}{}}}
\subsection{Method \code{delete()}}{
Method that allows you to delete project from a platform.
It can only be successfully made if you have admin status for the
project.
Please be careful when using this method and note that calling it will
permanently delete the project from the platform.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$delete()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-list_members"></a>}}
\if{latex}{\out{\hypertarget{method-Project-list_members}{}}}
\subsection{Method \code{list_members()}}{
Method for listing all the project members.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$list_members(
  limit = getOption("sevenbridges2")$limit,
  offset = getOption("sevenbridges2")$offset,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{limit}}{Defines the number of items you want to get from your API
request. By default, \code{limit} is set to \code{50}. Maximum is \code{100}.}

\item{\code{offset}}{Defines where the retrieved items started.
By default, \code{offset} is set to \code{0}.}

\item{\code{...}}{Other arguments.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List of Member class objects.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-add_member"></a>}}
\if{latex}{\out{\hypertarget{method-Project-add_member}{}}}
\subsection{Method \code{add_member()}}{
Method for adding new members to a specified project.
The call can only be successfully made by a user who has admin
permissions in the project.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$add_member(
  user = NULL,
  email = NULL,
  permissions = list(read = TRUE, copy = FALSE, write = FALSE, execute = FALSE, admin =
    FALSE)
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{user}}{The Seven Bridges Platform username of the person
you want to add to the project or object of class Member containing
user's username.}

\item{\code{email}}{The email address of the person you want to add to the
project. This has to be the email address that the person used when
registering for an account on the Seven Bridges Platform.}

\item{\code{permissions}}{List of permissions that will be associated with the
project's member. It can contain fields: 'read', 'copy', 'write',
'execute' and 'admin' with logical fields - TRUE if certain permission
is allowed to the user, or FALSE if it's not.
Requests to add a project member must include the key permissions.
However, if you do not include a value for some permission, it will be
set to FALSE by default. The exception to this rule is the 'read'
permission, which is the default permission on a project. It enables a
user to read project data, including file names, but access file
contents.

Example: list(read = TRUE, copy = TRUE, write = FALSE, execute = FALSE,
admin = FALSE)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Member object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-remove_member"></a>}}
\if{latex}{\out{\hypertarget{method-Project-remove_member}{}}}
\subsection{Method \code{remove_member()}}{
A method for removing members from the project. It can only
be successfully run by a user who has admin privileges in the project.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$remove_member(user)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{user}}{The Seven Bridges Platform username of the person
you want to remove from the project or object of class Member containing
user's username.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-get_member"></a>}}
\if{latex}{\out{\hypertarget{method-Project-get_member}{}}}
\subsection{Method \code{get_member()}}{
This method returns the information about the member of
the specified project.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$get_member(user, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{user}}{The Seven Bridges Platform username of the project member
you want to get information about or object of class Member containing
user's username.}

\item{\code{...}}{Other arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-modify_member_permissions"></a>}}
\if{latex}{\out{\hypertarget{method-Project-modify_member_permissions}{}}}
\subsection{Method \code{modify_member_permissions()}}{
This method can be used to edit a user's permissions in a
specified  project. It can only be successfully made by a user who
has admin permissions in the project.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$modify_member_permissions(
  user = NULL,
  permissions = list(read = TRUE, copy = FALSE, write = FALSE, execute = FALSE, admin =
    FALSE)
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{user}}{The Seven Bridges Platform username of the person
you want to modify permissions on the volume for or object of class
Member containing user's username.}

\item{\code{permissions}}{List of permissions that will be updated for the
user. It can contain fields: 'read', 'copy', 'execute', 'write' and
'admin' with logical values - TRUE if certain permission is allowed to
the user, or FALSE if it's not.
Example: list(read = TRUE, copy = TRUE)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Permission object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-files"></a>}}
\if{latex}{\out{\hypertarget{method-Project-files}{}}}
\subsection{Method \code{files()}}{
List all project's files and folders.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$files(
  limit = getOption("sevenbridges2")$limit,
  offset = getOption("sevenbridges2")$offset,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{limit}}{The maximum number of collection items to return for a
single request. Minimum value is 1. The maximum value is 100 and the
default value is 50. This is a pagination-specific attribute.}

\item{\code{offset}}{The zero-based starting index in the entire collection of
the first item to return. The default value is 0. This is a
pagination-specific attribute.}

\item{\code{...}}{Other arguments that can be passed to api() function
like 'limit', 'offset', 'fields', etc.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-create_folder"></a>}}
\if{latex}{\out{\hypertarget{method-Project-create_folder}{}}}
\subsection{Method \code{create_folder()}}{
Create a new folder under the project's root directory.
Every project on the Seven Bridges Platform is represented
by a root folder which contains all the files associated
with a particular project. You can create first level folders
within this root folder by using this function.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$create_folder(name, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Folder name.}

\item{\code{...}}{Other arguments that can be passed to api() function
like 'limit', 'offset', 'fields', etc.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-get_root_folder"></a>}}
\if{latex}{\out{\hypertarget{method-Project-get_root_folder}{}}}
\subsection{Method \code{get_root_folder()}}{
Get project's root folder object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$get_root_folder()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-list_apps"></a>}}
\if{latex}{\out{\hypertarget{method-Project-list_apps}{}}}
\subsection{Method \code{list_apps()}}{
This call lists all apps in project.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$list_apps(
  query_terms = NULL,
  id = NULL,
  limit = getOption("sevenbridges2")$limit,
  offset = getOption("sevenbridges2")$offset,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{query_terms}}{Enter one or more search terms to query Project's
apps.}

\item{\code{id}}{Use this parameter to query Project's apps based on their ID.}

\item{\code{limit}}{The maximum number of collection items to return for a
single request. Minimum value is 1. The maximum value is 100 and the
default value is 50. This is a pagination-specific attribute.}

\item{\code{offset}}{The zero-based starting index in the entire collection of
the first item to return. The default value is 0. This is a
pagination-specific attribute.}

\item{\code{...}}{Other arguments that can be passed to this method.
Such as query parameters.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-create_app"></a>}}
\if{latex}{\out{\hypertarget{method-Project-create_app}{}}}
\subsection{Method \code{create_app()}}{
This call creates app in project.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$create_app(
  raw = NULL,
  from_path = NULL,
  name,
  raw_format = c("JSON", "YAML")
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{raw}}{The body of the request should be a CWL app description saved
as a \code{JSON} or \code{YAML} file. For a template of this description, try
making the call to get raw CWL for an app about an app already in one
of your projects. Shouldn't be used together with \code{from_path}
parameter.}

\item{\code{from_path}}{File containing CWL app description. Shouldn't be used
together with raw parameter.}

\item{\code{name}}{A short name for the app (without any non-alphanumeric
characters or spaces).}

\item{\code{raw_format}}{The type of format used (\code{JSON} or \code{YAML}).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Project-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Project-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
