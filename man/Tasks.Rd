% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-tasks.R
\name{Tasks}
\alias{Tasks}
\title{R6 Class representing tasks endpoint}
\description{
R6 Class representing tasks resource endpoint
}
\section{Super class}{
\code{\link[sevenbridges2:Resource]{sevenbridges2::Resource}} -> \code{Tasks}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{URL}}{URL endpoint fields}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Tasks-new}{\code{Tasks$new()}}
\item \href{#method-Tasks-query}{\code{Tasks$query()}}
\item \href{#method-Tasks-get}{\code{Tasks$get()}}
\item \href{#method-Tasks-create}{\code{Tasks$create()}}
\item \href{#method-Tasks-clone}{\code{Tasks$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="sevenbridges2" data-topic="Resource" data-id="delete"><a href='../../sevenbridges2/html/Resource.html#method-Resource-delete'><code>sevenbridges2::Resource$delete()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Tasks-new"></a>}}
\if{latex}{\out{\hypertarget{method-Tasks-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Tasks$new(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Other arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Tasks-query"></a>}}
\if{latex}{\out{\hypertarget{method-Tasks-query}{}}}
\subsection{Method \code{query()}}{
This call lists all tasks you can access.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Tasks$query(
  status = NULL,
  parent = NULL,
  project = NULL,
  created_from = NULL,
  created_to = NULL,
  started_from = NULL,
  started_to = NULL,
  ended_from = NULL,
  ended_to = NULL,
  order_by = c("created_time", "start_time", "name", "end_time", "created_by"),
  order = c("asc", "desc"),
  origin_id = NULL,
  limit = getOption("sevenbridges2")$limit,
  offset = getOption("sevenbridges2")$offset,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{status}}{String. You can filter the returned tasks by their status.
Set the value of status to one of the following values: \code{QUEUED},
\code{DRAFT}, \code{RUNNING}, \code{COMPLETED}, \code{ABORTED}, \code{FAILED}.}

\item{\code{parent}}{Provide task ID or task object of the parent task to return
all child tasks from that parent. A parent task is a task that specifies
criteria by which to batch its inputs into a series of further sub-tasks,
calledchild tasks. See the documentation on
\href{https://docs.sevenbridges.com/docs/about-batch-analyses}{batching tasks}
for more details on how to run tasks in batches.}

\item{\code{project}}{Provide the project ID or project object you wish to list
the tasks from.}

\item{\code{created_from}}{String. Enter the starting date for querying tasks
created on the specified date and onwards.}

\item{\code{created_to}}{String. Enter the ending date for querying tasks
created until the specified date. You can use it in combination with
\code{created_from} to specify a time interval.}

\item{\code{started_from}}{String. Enter the starting date for querying tasks
started on the specified date and onwards.}

\item{\code{started_to}}{String. Enter the ending date for querying tasks
started until the specified date.}

\item{\code{ended_from}}{String. Enter the starting date for querying tasks
that ended on a specified date.}

\item{\code{ended_to}}{String. Enter the ending date for querying tasks that
ended until a specified date.}

\item{\code{order_by}}{String. Order returned results by the specified field.
Allowed values: \code{created_time}, \code{start_time}, \code{name}, \code{end_time} and
\code{created_by}. Sort can be done only by one column. The default value is
\code{created_time}.}

\item{\code{order}}{String. Sort results in ascending or descending order by
specifying \code{asc} or \code{desc}, respectively. Only taken into account if
\code{order_by} is explicitly specified. The default value is \code{asc}.}

\item{\code{origin_id}}{String. Enter an automation run ID to list all tasks
created from the specified automation run.}

\item{\code{limit}}{The maximum number of collection items to return for a
single request. Minimum value is 1. The maximum value is 100 and the
default value is 50. This is a pagination-specific attribute.}

\item{\code{offset}}{The zero-based starting index in the entire collection of
the first item to return. The default value is 0. This is a
pagination-specific attribute.}

\item{\code{...}}{Other arguments such as \code{fields} which can be used to specify
a subset of fields to include in the response.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Tasks-get"></a>}}
\if{latex}{\out{\hypertarget{method-Tasks-get}{}}}
\subsection{Method \code{get()}}{
This call returns details of the specified task. The task
is referred to by its ID, which you can obtain by making the call to
list all tasks you can access. The task details include its creator, its
start and end time, the number of jobs completed in it, and its input
and output files. You can also see the status of the task.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Tasks$get(id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the task you are querying.}

\item{\code{...}}{Other arguments such as \code{fields} which can be used to specify
a subset of fields to include in the response.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Tasks-create"></a>}}
\if{latex}{\out{\hypertarget{method-Tasks-create}{}}}
\subsection{Method \code{create()}}{
This call creates a new task. You can create either a single
task or a batch task by using the app's default batching, override
batching, or disable batching completely. A parent task is a task that
specifies criteria by which to batch its inputs into a series of further
sub-tasks, called child tasks. the documentation on
\link{batching tasks} (https://docs.sevenbridges.com/docs/about-batch-analyses)
for more details on batching criteria.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Tasks$create(
  project,
  app,
  revision = NULL,
  name = NULL,
  description = NULL,
  execution_settings = NULL,
  inputs = NULL,
  batch = NULL,
  batch_input = NULL,
  use_interruptible_instances = NULL,
  action = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{project}}{The ID string of a project or a Project object where you
want to create the task in.}

\item{\code{app}}{The ID string of an app or an App object you want to run.
Recall that apps are specified by their projects, in the form
\code{{project_owner}/{project}/{app_name}}}

\item{\code{revision}}{Numeric. The app
\link{revision (version)} (https://docs.sevenbridges.com/docs/app-versions)
number.}

\item{\code{name}}{String. The name of the task.}

\item{\code{description}}{String. An optional description of the task.}

\item{\code{execution_settings}}{Named list with detailed task execution
parameters. Detailed task execution parameters:
\itemize{
\item \code{instance_type}: String. Possible value is the specific instance type,
e.g. \code{"instance_type" = "c4.2xlarge;ebs-gp2;2000"}.
\item \code{max_parallel_instances}: Integer. Maximum number of instances
running at the same time. Takes any integer value equal to or greater
than 1, e.g. \code{"max_parallel_instances" = 2.}
\item \code{use_memoization}: Boolean. Set to \code{FALSE} by default. Set to \code{TRUE}
to enable
\href{https://docs.sevenbridges.com/docs/about-memoization}{memoization}.
\item \code{use_elastic_disk}: Boolean. Set to \code{TRUE} to enable
\href{https://docs.sevenbridges.com/page/elastic-disk}{Elastic Disk}.
}

Here is an example:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{execution_settings <- list(
  "instance_type" = "c4.2xlarge;ebs-gp2;2000",
  "max_parallel_instances" = 2,
  "use_memoization" = TRUE,
  "use_elastic_disk" = TRUE
  )
}\if{html}{\out{</div>}}}

\item{\code{inputs}}{List of objects. See the section on
\href{https://docs.sevenbridges.com/docs/the-api#section-inputs}{specifying task inputs}
for information on creating task input objects. Here is an example with
various input types:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{inputs <- list(
  "input_file"= "<file_id/file_object>",
  "input_directory" = "<folder_id/folder_object>",
  "input_array_string" = list("<string_elem_1>", "<string_elem_2>"),
  "input_boolean" = TRUE,
  "input_double" = 54.6,
  "input_enum" = "enum_1",
  "input_float" = 11.2,
  "input_integer" = "asdf",
  "input_long" = 4212,
  "input_string" = "test_string",
  "input_record" = list(
    "input_record_field_file" = "<file_id/file_object>",
    "input_record_field_integer" = 42
   )
  )
}\if{html}{\out{</div>}}}

\item{\code{batch}}{Boolean. This is set to \code{FALSE} by default. Set to \code{TRUE} to
create a batch task and specify the \code{batch_input} and \code{batch-by}
criteria as described below.}

\item{\code{batch_input}}{String. The ID of the input on which you wish to
batch. You would typically batch on the input consisting of a list of
files. If this parameter is omitted, the default batching criteria
defined for the app will be used.}

\item{\code{use_interruptible_instances}}{Boolean. This field can be \code{TRUE} or
\code{FALSE}. Set this field to \code{TRUE} to allow the use of
\href{https://docs.sevenbridges.com/docs/about-spot-instances}{spot instances}.}

\item{\code{action}}{String. If set to \code{run}, the task will be run immediately
upon creation.}

\item{\code{...}}{Other arguments such as \code{fields} which can be used to specify
a subset of fields to include in the response.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Tasks-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Tasks-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Tasks$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
